% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/grm_cv.R
\name{grm_cv}
\alias{grm_cv}
\title{Fit the Geostatistical Regression Model (GRM) With Cross Validation}
\usage{
grm_cv(
  Y,
  X,
  cv.object,
  L = NULL,
  M = NULL,
  coords,
  space.id,
  time.id,
  spacetime.id,
  include.additive.temporal.effect = T,
  include.additive.spatial.effect = T,
  include.multiplicative.temporal.effect = T,
  include.multiplicative.spatial.effect = T,
  num_neighbors = 10,
  n.iter = 25000,
  burn = 5000,
  thin = 4,
  covariance = "exponential",
  covariance.kernal = NULL,
  matern.nu = 1.5,
  tau.alpha.a = 0.5,
  tau.alpha.b = 0.005,
  tau.beta.a = 0.5,
  tau.beta.b = 0.005,
  omega.a = 0.5,
  omega.b = 0.005,
  theta.alpha.tune = 0.2,
  theta.alpha.a = 5,
  theta.alpha.b = 0.05,
  theta.alpha.init = 100,
  theta.beta.tune = 0.2,
  theta.beta.a = 5,
  theta.beta.b = 0.05,
  theta.beta.init = 100,
  rho.alpha.init = 0.9999,
  rho.beta.init = 0.9999,
  sigma.a = 0.001,
  sigma.b = 0.001,
  verbose = TRUE,
  verbose.iter = 1000
)
}
\arguments{
\item{Y}{Dependent variable vector (n)}

\item{X}{Standardized primary independent variable vector for all predictions (n_pred)}

\item{cv.object}{A named list containing cv.id, num.folds, and type. Can be created with create_cv function.}

\item{L}{Standardized spatial covariate matrix for all predictions (n_pred, p1)}

\item{M}{Standardized spatio-temporal covariate matrix for all predictions (n_pred, p2)}

\item{coords}{Matrix of prediction x, y coodinates (n_pred, 2)}

\item{space.id}{Spatial location ID vector (n)}

\item{time.id}{Temporal location ID vector (n)}

\item{spacetime.id}{ID vector of time points where spatial trends vary (n)}

\item{include.additive.temporal.effect}{Include additive temporal random effects.}

\item{include.additive.spatial.effect}{Include additive spatial random effects.}

\item{include.multiplicative.temporal.effect}{Include multiplicative temporal random effects.}

\item{include.multiplicative.spatial.effect}{Include multiplicative spatial random effects.}

\item{num_neighbors}{Number of nearest neighbors to use in NNGP}

\item{n.iter}{Number of iterations used in predictions. Must be <= than post-thined and burned iterations from grm.fit}

\item{burn}{Number of pre-covergence simulations}

\item{thin}{Save every thin'th simulation}

\item{covariance}{Specify covariance function (from "exponential", "matern", "custom")}

\item{covariance.kernal}{Specify a custom covariance function if covariance = "custom". Must be a function with "distance" and "theta" parameters.}

\item{matern.nu}{Specify nu parameter for Matern covariance function if used (from 0.5, 1.5, and 2.5)}

\item{tau.alpha.a}{First tau alpha prior hyperparameter}

\item{tau.alpha.b}{Second tau alpha prior hyperparameter}

\item{tau.beta.a}{First tau beta prior hyperparameter}

\item{tau.beta.b}{Second tau beta prior hyperparameter}

\item{omega.a}{First omega prior hyperparameter}

\item{omega.b}{Second omega prior hyperparameter}

\item{theta.alpha.tune}{Theta alpha Metropolis-Hastings proposal tuning parameter}

\item{theta.alpha.a}{First theta alpha prior hyperparameter}

\item{theta.alpha.b}{Second theta alpha prior hyperparameter}

\item{theta.alpha.init}{Initial value for theta alpha}

\item{theta.beta.tune}{Theta beta Metropolis-Hastings proposal tuning parameter}

\item{theta.beta.a}{First theta beta prior hyperparameter}

\item{theta.beta.b}{Second theta beta prior hyperparameter}

\item{theta.beta.init}{Initial value for theta beta}

\item{rho.alpha.init}{Initial value for rho alpha}

\item{rho.beta.init}{Initial value for rho beta}

\item{sigma.a}{First sigma prior hyperparameter}

\item{sigma.b}{Second sigma prior hyperparameter}

\item{verbose}{Print MCMC output}

\item{verbose.iter}{print MCMC output step number each 'verbose.iter' iterations}
}
\value{
A data frame containing cross validation predictions
}
\description{
This function fits Bayesian Hierarchical Model (BHM) in the form of Y ~ beta X + gamma L + delta M with cross-validation
}
\examples{
# grm_cv()


}
